{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\gramma tech\\\\Class\\\\React\\\\React-contacts-lab\\\\src\\\\Components\\\\FirstContacts.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport contacts from \"../contacts.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirstContacts = () => {\n  _s();\n  const fiveContacts = contacts.slice(0, 5);\n  const [contactsArr, setContactArr] = useState(fiveContacts);\n  const allContac = contacts.slice(5, contacts.length);\n  const addNewContacts = () => {\n    let indexInContactsRestArr = Math.floor(Math.random() * allContac.length) - 1;\n    let newContact = allContac.splice(indexInContactsRestArr, 1);\n    setContactArr([...contactsArr, newContact[0]]);\n  };\n  const sortByPopularity = () => {\n    let copyContacts = [...contactsArr];\n    setContactArr(() => {\n      copyContacts.sort((a, b) => b.popularity - a.popularity);\n      return copyContacts;\n    });\n  };\n  const sortByName = () => {\n    let copyContacts = [...contactsArr];\n    copyContacts.sort(function (a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n    setContactArr(copyContacts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewContacts,\n      children: \"Add Random Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByPopularity,\n      children: \"Sort by popularity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      children: \"Sort by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Popularity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Won an Oscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Won an Emmy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contactsArr.map(cont => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cont.pictureUrl,\n                alt: cont.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cont.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cont.popularity.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cont.wonOscar ? \"üèÜ\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cont.wonEmmy ? \"üåü\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, cont.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(FirstContacts, \"JtjEcR/fAuXsGS+o/p9xBfD5px4=\");\n_c = FirstContacts;\nexport default FirstContacts;\nvar _c;\n$RefreshReg$(_c, \"FirstContacts\");","map":{"version":3,"names":["useState","contacts","FirstContacts","fiveContacts","slice","contactsArr","setContactArr","allContac","length","addNewContacts","indexInContactsRestArr","Math","floor","random","newContact","splice","sortByPopularity","copyContacts","sort","a","b","popularity","sortByName","name","map","cont","pictureUrl","toFixed","wonOscar","wonEmmy","id"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/gramma tech/Class/React/React-contacts-lab/src/Components/FirstContacts.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport contacts from \"../contacts.json\";\r\n\r\n\r\nconst FirstContacts = () => {\r\n\r\n    const fiveContacts = contacts.slice(0, 5);\r\n\r\n    const [contactsArr, setContactArr] = useState(fiveContacts)\r\n\r\n    const allContac = contacts.slice(5, (contacts.length));\r\n\r\n    const addNewContacts = () => {\r\n        let indexInContactsRestArr = Math.floor(Math.random() * allContac.length) - 1;\r\n        let newContact = allContac.splice(indexInContactsRestArr, 1)\r\n        setContactArr([...contactsArr, newContact[0]])\r\n    }\r\n\r\n    const sortByPopularity = () => {\r\n        let copyContacts = [...contactsArr]\r\n        setContactArr(() => {\r\n            copyContacts.sort((a, b) => b.popularity - a.popularity)\r\n            return copyContacts\r\n        });\r\n    }\r\n\r\n\r\n    const sortByName = () => {\r\n        let copyContacts = [...contactsArr]\r\n\r\n        copyContacts.sort(function (a, b) {\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n            if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n\r\n\r\n        setContactArr(copyContacts);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={addNewContacts} >Add Random Contact</button>\r\n            <button onClick={sortByPopularity} >Sort by popularity</button>\r\n            <button onClick={sortByName} >Sort by name</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Picture</th>\r\n                        <th>Name</th>\r\n                        <th>Popularity</th>\r\n                        <th>Won an Oscar</th>\r\n                        <th>Won an Emmy</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contactsArr.map((cont) => {\r\n                        return (\r\n                            <tr key={cont.id}>\r\n                                <td><img src={cont.pictureUrl} alt={cont.name} /></td>\r\n                                <td>{cont.name}</td>\r\n                                <td>{cont.popularity.toFixed(2)}</td>\r\n                                <td>{(cont.wonOscar) ? \"üèÜ\" : null}</td>\r\n                                <td>{(cont.wonEmmy) ? \"üåü\" : null}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default FirstContacts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}